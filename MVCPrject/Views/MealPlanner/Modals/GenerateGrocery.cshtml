@using MVCPrject.Models

<div class="modal fade" id="groceryListModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header text-white">
                <h5 class="modal-title">Your Grocery List</h5>
                <div class="dropdown ms-auto">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dateRangeDropdown">
                        Select Date Range
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dateRangeDropdown">
                        <li><a class="dropdown-item" href="#" data-range="today">Today</a></li>
                        <li><a class="dropdown-item" href="#" data-range="next7">Next 7 Days</a></li>
                        <li><a class="dropdown-item" href="#" data-range="thisMonth">This Month</a></li>
                    </ul>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <i data-feather="x"></i>
                </button>
            </div>
            <div class="modal-body">
                <div id="groceryListSpinner" class="text-center my-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Generating your grocery list...</p>
                </div>
                <div id="groceryItems" class="list-group list-group-flush" style="display: none;">
                    <!-- Dynamically populated with grocery items -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn fw-bold print-btn" onclick="printGroceryList()">Print
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var generateBtn = document.getElementById('generateGroceryBtn');
            if (generateBtn) {
                console.log('JS: GenerateGrocery button listener attached.');
                generateBtn.addEventListener('click', function () {
                    console.log('JS: GenerateGrocery button clicked.');
                    var startDate = document.getElementById('startDate').value;
                    var endDate = document.getElementById('endDate').value;
                    console.log(`JS: Fetching ingredients for startDate: ${startDate}, endDate: ${endDate}`);

                    if (!startDate || !endDate) {
                        alert('Please select both a start and end date.');
                        return;
                    }

                    fetch(`/api/GroceryList?startDate=${startDate}&endDate=${endDate}`)
                        .then(response => {
                            console.log('JS: Received response from API:', response);
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('JS: Received data from API:', data);
                            var groceryItemsContainer = document.getElementById('groceryItems');
                            groceryItemsContainer.innerHTML = ''; // Clear existing items

                            if (!data || data.length === 0) {
                                groceryItemsContainer.innerHTML = '<div class="list-group-item">No ingredients found for the selected dates.</div>';
                                return;
                            }

                            const allIngredients = data.flatMap(recipe => recipe.ingredients || recipe.Ingredients || []);

                            if (allIngredients.length === 0) {
                                groceryItemsContainer.innerHTML = '<div class="list-group-item">No ingredients found for the selected dates.</div>';
                                return;
                            }

                            const consolidatedIngredients = {};
                            allIngredients.forEach(ingredient => {
                                const name = ingredient.ingredientName || ingredient.IngredientName;
                                const unit = ingredient.unit || ingredient.Unit;
                                const quantity = ingredient.quantity || ingredient.Quantity;

                                const key = `${name}|${unit}`;
                                if (!consolidatedIngredients[key]) {
                                    consolidatedIngredients[key] = { name: name, unit: unit, quantity: 0 };
                                }
                                consolidatedIngredients[key].quantity += quantity || 0;
                            });

                            const ingredientsList = Object.values(consolidatedIngredients);

                            ingredientsList.forEach(item => {
                                var div = document.createElement('div');
                                div.className = 'list-group-item d-flex justify-content-between align-items-center';
                                div.innerHTML = `<span>${item.unit} ${item.name}</span><span class="amt-badge py-1 px-2 rounded-pill">${item.quantity}</span>`;
                                groceryItemsContainer.appendChild(div);
                            });
                        })
                        .catch(error => {
                            console.error('JS: There has been a problem with your fetch operation:', error);
                            var groceryItemsContainer = document.getElementById('groceryItems');
                            groceryItemsContainer.innerHTML = '<div class="list-group-item text-danger">Failed to load grocery list.</div>';
                        });
                });
            }
        });

        function printGroceryList() {
            const groceryItemsContainer = document.getElementById('groceryItems');
            const childNodes = groceryItemsContainer.childNodes;

            if (childNodes.length === 0 || (childNodes.length === 1 && childNodes[0].innerText.includes('No ingredients found'))) {
                alert("There are no items in the grocery list to print.");
                return;
            }

            let printHtml = '<h1>Grocery List</h1>';
            let inList = false;

            childNodes.forEach(node => {
                if (node.tagName === 'H6') {
                    if (inList) {
                        printHtml += '</ul>';
                    }
                    printHtml += `<h2>${node.innerText}</h2><ul>`;
                    inList = true;
                } else if (node.classList && node.classList.contains('list-group-item')) {
                    if (!inList) {
                        printHtml += '<ul>';
                        inList = true;
                    }

                    const textSpan = node.querySelector('span:first-child');
                    const quantitySpan = node.querySelector('span.amt-badge');

                    if (textSpan && quantitySpan) {
                        const text = textSpan.innerText;
                        const quantity = quantitySpan.innerText;
                        printHtml += `<li>${text} - <strong>${quantity}</strong></li>`;
                    } else {
                        printHtml += `<li>${node.innerText}</li>`;
                    }
                }
            });

            if (inList) {
                printHtml += '</ul>';
            }

            const printWindow = window.open('', '', 'height=600,width=800');
            if (printWindow) {
                printWindow.document.write('<html><head><title>Print Grocery List</title>');
                printWindow.document.write('<style>body{font-family:sans-serif}h1{font-size:24px}h2{font-size:18px;margin-top:1em}ul{list-style-type:disc;padding-left:20px}li{margin-bottom:5px}</style>');
                printWindow.document.write('</head><body>');
                printWindow.document.write(printHtml);
                printWindow.document.write('</body></html>');
                printWindow.document.close();
                printWindow.focus();
                printWindow.print();
                printWindow.close();
            } else {
                alert('Please allow pop-ups for this website to print the grocery list.');
            }
        }
    </script>
}
